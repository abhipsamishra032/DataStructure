/*********
Leet code 
203. Remove Linked List Elements
Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.


Input: head = [1,2,6,3,4,5,6], val = 6
Output: [1,2,3,4,5]

***/

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} val
 * @return {ListNode}
 */
var removeElements = function(head, val) {
    if(head === null) return null;
    let node = head, prev = null;
    while(node) {
        if(node.val === val) {
            if(prev === null) head = head.next;
            else prev.next = node.next
        } else prev = node
            
        node = node.next;
    }
    return head
};
