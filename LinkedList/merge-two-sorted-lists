***//

Leet Code Challange

21. Merge Two Sorted Lists

You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]


**//

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
 
 //Used Merge sort
var mergeTwoLists = function(list1, list2) {
    if(list1 === null && list2 === null) return null;
    if(list2 === null) return list1;
    if(list1 === null) return list2;
    
    let result = new ListNode(0), resultList = result;
    while(list1) {
        if(list2 === null || list1.val <= list2.val) {
            resultList.next = new ListNode(list1.val);
            list1 = list1.next;
        } else {
            resultList.next = new ListNode(list2.val);
            list2 = list2.next;
        }
        resultList = resultList.next;
    }
    resultList.next = list2;
    return result.next
};

